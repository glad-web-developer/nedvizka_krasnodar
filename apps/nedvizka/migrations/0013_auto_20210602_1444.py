# Generated by Django 3.0.13 on 2021-06-02 05:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djangocms_text_ckeditor.fields
import filer.fields.image


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ('nedvizka', '0012_auto_20210602_1439'),
    ]

    operations = [
        migrations.CreateModel(
            name='KomerchiskieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokazivat', models.BooleanField(choices=[(True, 'Показывать'), (False, 'Скрыть')], default=True, verbose_name='Показывать')),
                ('eto_luchoe_prodlozenie', models.IntegerField(choices=[(1, 'Нет'), (2, 'Да. Выводить только на странице лучших предложений'), (3, 'Да. Выводить на странице лучших предложений и главной')], default=1, verbose_name='Лучшее предложение?')),
                ('nazvanie', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('price_bazovaia', models.FloatField(default=0, verbose_name='Базовая цена руб.')),
                ('prrice_akzionnaia', models.FloatField(default=0, verbose_name='Акционная цена руб')),
                ('price_itogovaia', models.FloatField(default=0, verbose_name='Цена для поиска')),
                ('akzia', models.BooleanField(default=False, verbose_name='Акция/спец цена')),
                ('obshaia_ploshad', models.FloatField(blank=True, null=True, verbose_name='Плоащдь участка и дома (кв. м)')),
                ('naselenii_punkt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('kordinati_na_karte', models.CharField(blank=True, help_text='Например "44.533249, 33.455248" без кавычек (https://snipp.ru/tools/address-coord)', max_length=255, null=True, verbose_name='Координаты на карте')),
                ('nalichie_gaza', models.BooleanField(default=False, verbose_name='Наличие газа в доме')),
                ('blizost_so_shkoloi', models.BooleanField(default=False, verbose_name='Близость со школой')),
                ('blizost_s_med', models.BooleanField(default=False, verbose_name='Близость с мед учереждением')),
                ('blizost_s_metro', models.BooleanField(default=False, verbose_name='Близость с метро')),
                ('nalichie_otdelki', models.IntegerField(choices=[(None, '---'), (1, 'Без отделки'), (2, 'Черновая'), (3, 'С ремонтом')], default=1, verbose_name='Наличие отделки')),
                ('opisaanaie', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', null=True, verbose_name='Описание')),
                ('previu', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Превью')),
            ],
            options={
                'verbose_name': 'Квартиры первичка - аренда',
                'verbose_name_plural': 'Квартиры первичка - аренда',
            },
        ),
        migrations.CreateModel(
            name='KomerchiskieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokazivat', models.BooleanField(choices=[(True, 'Показывать'), (False, 'Скрыть')], default=True, verbose_name='Показывать/скрыть')),
                ('eto_luchoe_prodlozenie', models.IntegerField(choices=[(1, 'Нет'), (2, 'Да. Выводить только на странице лучших предложений'), (3, 'Да. Выводить на странице лучших предложений и главной')], default=1, verbose_name='Лучшее предложение?')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('price_bazovaia', models.FloatField(default=0, verbose_name='Базовая цена руб.')),
                ('prrice_akzionnaia', models.FloatField(default=0, verbose_name='Акционная цена руб')),
                ('price_itogovaia', models.FloatField(default=0, verbose_name='Цена для поиска')),
                ('akzia', models.BooleanField(default=False, verbose_name='Акция/спец цена')),
                ('obshaia_ploshad', models.FloatField(blank=True, null=True, verbose_name='Площадь участка и дома (кв. м)')),
                ('naselenii_punkt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('kordinati_na_karte', models.CharField(blank=True, help_text='Например "44.533249, 33.455248" без кавычек (https://snipp.ru/tools/address-coord)', max_length=255, null=True, verbose_name='Координаты на карте')),
                ('nalichie_gaza', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Наличие газа в доме')),
                ('blizost_so_shkoloi', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость со школой')),
                ('blizost_s_med', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость с мед учереждением')),
                ('blizost_s_metro', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость с метро')),
                ('nalichie_otdelki', models.IntegerField(choices=[(None, '---'), (1, 'Без отделки'), (2, 'Черновая'), (3, 'С ремонтом')], default=1, verbose_name='Наличие отделки')),
                ('opisaanaie', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', null=True, verbose_name='Описание')),
                ('previu', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Превью')),
            ],
            options={
                'verbose_name': 'Квартира первичка - продажа',
                'verbose_name_plural': 'Квартира первичка - продажа',
            },
        ),
        migrations.CreateModel(
            name='NezelieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokazivat', models.BooleanField(choices=[(True, 'Показывать'), (False, 'Скрыть')], default=True, verbose_name='Показывать')),
                ('eto_luchoe_prodlozenie', models.IntegerField(choices=[(1, 'Нет'), (2, 'Да. Выводить только на странице лучших предложений'), (3, 'Да. Выводить на странице лучших предложений и главной')], default=1, verbose_name='Лучшее предложение?')),
                ('nazvanie', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('price_bazovaia', models.FloatField(default=0, verbose_name='Базовая цена руб.')),
                ('prrice_akzionnaia', models.FloatField(default=0, verbose_name='Акционная цена руб')),
                ('price_itogovaia', models.FloatField(default=0, verbose_name='Цена для поиска')),
                ('akzia', models.BooleanField(default=False, verbose_name='Акция/спец цена')),
                ('obshaia_ploshad', models.FloatField(blank=True, null=True, verbose_name='Плоащдь участка и дома (кв. м)')),
                ('naselenii_punkt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('kordinati_na_karte', models.CharField(blank=True, help_text='Например "44.533249, 33.455248" без кавычек (https://snipp.ru/tools/address-coord)', max_length=255, null=True, verbose_name='Координаты на карте')),
                ('nalichie_gaza', models.BooleanField(default=False, verbose_name='Наличие газа в доме')),
                ('blizost_so_shkoloi', models.BooleanField(default=False, verbose_name='Близость со школой')),
                ('blizost_s_med', models.BooleanField(default=False, verbose_name='Близость с мед учереждением')),
                ('blizost_s_metro', models.BooleanField(default=False, verbose_name='Близость с метро')),
                ('nalichie_otdelki', models.IntegerField(choices=[(None, '---'), (1, 'Без отделки'), (2, 'Черновая'), (3, 'С ремонтом')], default=1, verbose_name='Наличие отделки')),
                ('opisaanaie', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', null=True, verbose_name='Описание')),
                ('previu', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Превью')),
            ],
            options={
                'verbose_name': 'Квартиры первичка - аренда',
                'verbose_name_plural': 'Квартиры первичка - аренда',
            },
        ),
        migrations.CreateModel(
            name='NezelieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokazivat', models.BooleanField(choices=[(True, 'Показывать'), (False, 'Скрыть')], default=True, verbose_name='Показывать/скрыть')),
                ('eto_luchoe_prodlozenie', models.IntegerField(choices=[(1, 'Нет'), (2, 'Да. Выводить только на странице лучших предложений'), (3, 'Да. Выводить на странице лучших предложений и главной')], default=1, verbose_name='Лучшее предложение?')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('price_bazovaia', models.FloatField(default=0, verbose_name='Базовая цена руб.')),
                ('prrice_akzionnaia', models.FloatField(default=0, verbose_name='Акционная цена руб')),
                ('price_itogovaia', models.FloatField(default=0, verbose_name='Цена для поиска')),
                ('akzia', models.BooleanField(default=False, verbose_name='Акция/спец цена')),
                ('obshaia_ploshad', models.FloatField(blank=True, null=True, verbose_name='Площадь участка и дома (кв. м)')),
                ('naselenii_punkt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('kordinati_na_karte', models.CharField(blank=True, help_text='Например "44.533249, 33.455248" без кавычек (https://snipp.ru/tools/address-coord)', max_length=255, null=True, verbose_name='Координаты на карте')),
                ('nalichie_gaza', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Наличие газа в доме')),
                ('blizost_so_shkoloi', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость со школой')),
                ('blizost_s_med', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость с мед учереждением')),
                ('blizost_s_metro', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость с метро')),
                ('nalichie_otdelki', models.IntegerField(choices=[(None, '---'), (1, 'Без отделки'), (2, 'Черновая'), (3, 'С ремонтом')], default=1, verbose_name='Наличие отделки')),
                ('opisaanaie', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', null=True, verbose_name='Описание')),
                ('previu', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Превью')),
            ],
            options={
                'verbose_name': 'Квартира первичка - продажа',
                'verbose_name_plural': 'Квартира первичка - продажа',
            },
        ),
        migrations.CreateModel(
            name='UchactkiArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokazivat', models.BooleanField(choices=[(True, 'Показывать'), (False, 'Скрыть')], default=True, verbose_name='Показывать')),
                ('eto_luchoe_prodlozenie', models.IntegerField(choices=[(1, 'Нет'), (2, 'Да. Выводить только на странице лучших предложений'), (3, 'Да. Выводить на странице лучших предложений и главной')], default=1, verbose_name='Лучшее предложение?')),
                ('nazvanie', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('price_bazovaia', models.FloatField(default=0, verbose_name='Базовая цена руб.')),
                ('prrice_akzionnaia', models.FloatField(default=0, verbose_name='Акционная цена руб')),
                ('price_itogovaia', models.FloatField(default=0, verbose_name='Цена для поиска')),
                ('akzia', models.BooleanField(default=False, verbose_name='Акция/спец цена')),
                ('obshaia_ploshad', models.FloatField(blank=True, null=True, verbose_name='Плоащдь участка и дома (кв. м)')),
                ('naselenii_punkt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('kordinati_na_karte', models.CharField(blank=True, help_text='Например "44.533249, 33.455248" без кавычек (https://snipp.ru/tools/address-coord)', max_length=255, null=True, verbose_name='Координаты на карте')),
                ('nalichie_gaza', models.BooleanField(default=False, verbose_name='Наличие газа в доме')),
                ('blizost_so_shkoloi', models.BooleanField(default=False, verbose_name='Близость со школой')),
                ('blizost_s_med', models.BooleanField(default=False, verbose_name='Близость с мед учереждением')),
                ('blizost_s_metro', models.BooleanField(default=False, verbose_name='Близость с метро')),
                ('nalichie_otdelki', models.IntegerField(choices=[(None, '---'), (1, 'Без отделки'), (2, 'Черновая'), (3, 'С ремонтом')], default=1, verbose_name='Наличие отделки')),
                ('opisaanaie', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', null=True, verbose_name='Описание')),
                ('previu', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Превью')),
            ],
            options={
                'verbose_name': 'Квартиры первичка - аренда',
                'verbose_name_plural': 'Квартиры первичка - аренда',
            },
        ),
        migrations.CreateModel(
            name='UchactkiProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pokazivat', models.BooleanField(choices=[(True, 'Показывать'), (False, 'Скрыть')], default=True, verbose_name='Показывать/скрыть')),
                ('eto_luchoe_prodlozenie', models.IntegerField(choices=[(1, 'Нет'), (2, 'Да. Выводить только на странице лучших предложений'), (3, 'Да. Выводить на странице лучших предложений и главной')], default=1, verbose_name='Лучшее предложение?')),
                ('nazvanie', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, verbose_name='Ссылка')),
                ('price_bazovaia', models.FloatField(default=0, verbose_name='Базовая цена руб.')),
                ('prrice_akzionnaia', models.FloatField(default=0, verbose_name='Акционная цена руб')),
                ('price_itogovaia', models.FloatField(default=0, verbose_name='Цена для поиска')),
                ('akzia', models.BooleanField(default=False, verbose_name='Акция/спец цена')),
                ('obshaia_ploshad', models.FloatField(blank=True, null=True, verbose_name='Площадь участка и дома (кв. м)')),
                ('naselenii_punkt', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('adres', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('kordinati_na_karte', models.CharField(blank=True, help_text='Например "44.533249, 33.455248" без кавычек (https://snipp.ru/tools/address-coord)', max_length=255, null=True, verbose_name='Координаты на карте')),
                ('nalichie_gaza', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Наличие газа в доме')),
                ('blizost_so_shkoloi', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость со школой')),
                ('blizost_s_med', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость с мед учереждением')),
                ('blizost_s_metro', models.BooleanField(choices=[(None, '---'), (True, 'Да'), (False, 'Нет')], default=False, verbose_name='Близость с метро')),
                ('nalichie_otdelki', models.IntegerField(choices=[(None, '---'), (1, 'Без отделки'), (2, 'Черновая'), (3, 'С ремонтом')], default=1, verbose_name='Наличие отделки')),
                ('opisaanaie', djangocms_text_ckeditor.fields.HTMLField(blank=True, help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', null=True, verbose_name='Описание')),
                ('previu', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Превью')),
            ],
            options={
                'verbose_name': 'Квартира первичка - продажа',
                'verbose_name_plural': 'Квартира первичка - продажа',
            },
        ),
        # migrations.RenameModel(
        #     old_name='PanoramiArenda',
        #     new_name='PanoramiDomaArenda',
        # ),
        migrations.CreateModel(
            name='VideoUchactkiProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='Iframe код видео')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_set', to='nedvizka.UchactkiProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='VideoUchactkiArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='Iframe код видео')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_set', to='nedvizka.UchactkiArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='VideoNezelieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='Iframe код видео')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_set', to='nedvizka.NezelieProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='VideoNezelieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='Iframe код видео')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_set', to='nedvizka.NezelieArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='VideoKomerchiskieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='Iframe код видео')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_set', to='nedvizka.KomerchiskieProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='VideoKomerchiskieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='Iframe код видео')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='video_set', to='nedvizka.KomerchiskieArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='PanoramiUchactkiProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iframe_code', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='iframe код')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panorami_set', to='nedvizka.UchactkiProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Панорамы',
                'verbose_name_plural': 'Панорамы',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='PanoramiUchactkiArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iframe_code', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='iframe код')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panorami_set', to='nedvizka.UchactkiArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Панорамы',
                'verbose_name_plural': 'Панорамы',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='PanoramiNezelieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iframe_code', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='iframe код')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panorami_set', to='nedvizka.NezelieProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Панорамы',
                'verbose_name_plural': 'Панорамы',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='PanoramiNezelieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iframe_code', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='iframe код')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panorami_set', to='nedvizka.NezelieArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Панорамы',
                'verbose_name_plural': 'Панорамы',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='PanoramiKomerchiskieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iframe_code', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='iframe код')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panorami_set', to='nedvizka.KomerchiskieProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Панорамы',
                'verbose_name_plural': 'Панорамы',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='PanoramiKomerchiskieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iframe_code', models.TextField(help_text='Будет выводиться только если выбран шаблонное оформление страницы объекта', verbose_name='iframe код')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='panorami_set', to='nedvizka.KomerchiskieArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Панорамы',
                'verbose_name_plural': 'Панорамы',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='FotoUchactkiProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('img', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Фото')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foto_set', to='nedvizka.UchactkiProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='FotoUchactkiArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('img', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Фото')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foto_set', to='nedvizka.UchactkiArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='FotoNezelieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('img', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Фото')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foto_set', to='nedvizka.NezelieProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='FotoNezelieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('img', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Фото')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foto_set', to='nedvizka.NezelieArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='FotoKomerchiskieProdaza',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('img', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Фото')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foto_set', to='nedvizka.KomerchiskieProdaza', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-index_sortirivki'],
            },
        ),
        migrations.CreateModel(
            name='FotoKomerchiskieArenda',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_sortirivki', models.IntegerField(default=0, help_text='Чем больше тем раньше выведет', verbose_name='Индекс сортировки')),
                ('img', filer.fields.image.FilerImageField(on_delete=django.db.models.deletion.CASCADE, to=settings.FILER_IMAGE_MODEL, verbose_name='Фото')),
                ('nedvizka', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foto_set', to='nedvizka.KomerchiskieArenda', verbose_name='Недвижка')),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фото',
                'ordering': ['-index_sortirivki'],
            },
        ),
    ]
